<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev Ops on buddyspike</title>
    <link>https://buddyspike.github.io/blog/tags/dev-ops/</link>
    <description>Recent content in Dev Ops on buddyspike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Oct 2017 09:28:47 +1100</lastBuildDate>
    
	<atom:link href="https://buddyspike.github.io/blog/tags/dev-ops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building Modular Systems with mbt</title>
      <link>https://buddyspike.github.io/blog/post/building-modular-systems-with-mbt/</link>
      <pubDate>Sat, 07 Oct 2017 09:28:47 +1100</pubDate>
      
      <guid>https://buddyspike.github.io/blog/post/building-modular-systems-with-mbt/</guid>
      <description>Large systems are usually constructed by composing many small systems. My favorite browser for example distributes its work across different processes while I&amp;rsquo;m conveniently enjoying my morning dose of hacker news. This also applies to server side systems with the added complexity of modules being distributed across multiple machines, built using different tool-chains etc.
Modularisation is great as it gives us the ability to reduce coupling and cohesion. However, ultimately, we are only interested in the overall state of the system rather than the individual modules.</description>
    </item>
    
  </channel>
</rss>